#!/usr/bin/perl
#
# $Name: V6LC_5_0_0 $
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $Id: F_PLinvalid.seq,v 1.7 2008/07/31 02:40:32 hide Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: V6LC_5_0_0 $';
}

use V6evalTool;
use CommonSPEC;

$pktdesc{'echo_request_1st'}	= 'Send Echo Request (1st fragment) with Invalid Payload Length';
$pktdesc{'icmperr'}		= 'Recv ICMP Error (Parameter Problem, erroneous header field encountered)';

$endStatus = $V6evalTool::exitPass;

#----- create Fragment ID
$id = time & 0x00000fff;
$fid = sprintf("0x0%07x", $id);
$rid = sprintf("0x0%03x", $id);
$sno = 0;

vCPP("-DFRAG_ID=$fid -DREQ_ID=$rid -DSEQ_NO=$sno");
################################################################
$IF = 'Link0';

vCapture($IF);

#----- test
vSend($IF, 'echo_request_1st');
%ret = nd_vRecv_EN($IF, $CommonSPEC::wait_reply, 0, 0, 'icmperr', 'echo_reply');

if ($ret{'status'} == 0) {
	if ($ret{'recvFrame'} eq 'icmperr') {
		vLogHTML('OK<BR>');
	} elsif ($ret{'recvFrame'} eq 'echo_reply') {
		vLogHTML('Received unexpected Echo Reply<BR>');
		vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
		$endStatus = $V6evalTool::exitFail;
	}
} else {
	vLogHTML('Cannot receive ICMP Error message<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
	$endStatus = $V6evalTool::exitFail;
}
#----- end test

$ret = cleanup($IF);
vStop($IF);
if ($ret == $CommonSPEC::Success) {
	exit($endStatus);
} else {
	exit($V6evalTool::exitFatal);
}


######################################################################
__END__

=head1 NAME

  F_PLinvalid - Fragment Header M-Bit Set, Payload Length Invalid

=head1 TARGET

  Host and Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./F_PLinvalid.seq">F_PLinvalid.seq</A> [-tooloption ...] -pkt <A HREF="./F_PLinvalid.def">F_PLinvalid.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  None

=head1 TEST PROCEDURE

Verify that a node takes the proper actions when it receives a fragment with the M-bit set (more fragments), but which has a Payload Length that is not a multiple of 8 bytes.

   TN                          NUT
    |                           |
    |-------------------------->|
    |   Echo Request (1st)      |
    |                           |
    |                           |
    |<--------------------------|
    |   ICMP Error              |
    |                           |
    |                           |
    v                           v

  1. TN1 transmits an Echo Request that has a Fragment header with the M-bit set.
     The Payload Length is 21, which is not a multiple of 8 octets.
  2. Observe the packets transmitted by the NUT.

  Echo Request (1st fragment) is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 21 (not multiple of 8 octets)
            NextHeader         = 44 (Fragment Header)
            SourceAddress      = TN Link Local Address
            DestinationAddress = NUT Link Local Address

        Fragment Header 
            NextHeader         = 58 (ICMPv6)
            FragmentOffset     = 0 (1st fragment)
            MFlag              = 1 (more fragment)

        ICMPv6 Echo Request
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = (auto)
            SequenceNumber = 0
            PayloadData    = {0, 1, 2, 3, 4}

=head1 JUDGEMENT

  PASS: The NUT must not transmit an Echo Reply to TN, as the fragment was discarded.
        The NUT should transmit an ICMPv6 Parameter Problem message to TN.
        The Code field should be 0 (erroneous header field encountered).
        The Pointer field should be 0x04 (ofset of Payload Length field of the IPv6 header).

        IPv6 Header
            Version             = 6
            Traffic Class       = 0
            FlowLabel           = 0
            PayloadLength       = 61
            NextHeader          = 58 (ICMPv6)
            SourceAddress       = NUT Link Local Address
            Destination Address = TN Link Local Address

        ICMP Error
            Type           = 4 (Parameter Problem)
            Code           = 0 (erroneous header field encountered)
            Checksum       = (auto)
            Pointer        = 4 (Pointer to Payload Length in IPv6 Header)
            PayloadData    = (Sent Packet)

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2460
# 
# 4.5  Fragment Header
# 
#    The following error conditions may arise when reassembling fragmented
#    packets:
# 
#       If insufficient fragments are received to complete reassembly of a
#       packet within 60 seconds of the reception of the first-arriving
#       fragment of that packet, reassembly of that packet must be
#       abandoned and all the fragments that have been received for that
#       packet must be discarded.  If the first fragment (i.e., the one
#       with a Fragment Offset of zero) has been received, an ICMP Time
#       Exceeded -- Fragment Reassembly Time Exceeded message should be
#       sent to the source of that fragment.
# 
# =begin html
# <PRE>
#       <B>If the length of a fragment, as derived from the fragment packet's
#       Payload Length field, is not a multiple of 8 octets and the M flag
#       of that fragment is 1, then that fragment must be discarded and an
#       ICMP Parameter Problem, Code 0, message should be sent to the
#       source of the fragment, pointing to the Payload Length field of   
#       the fragment packet.</B>
# </PRE>
# 
# =end html
# 
#       If the length and offset of a fragment are such that the Payload
#       Length of the packet reassembled from that fragment would exceed
#       65,535 octets, then that fragment must be discarded and an ICMP
#       Parameter Problem, Code 0, message should be sent to the source of
#       the fragment, pointing to the Fragment Offset field of the
#       fragment packet.
# 
#    The following conditions are not expected to occur, but are not
#    considered errors if they do:
# 
#       The number and content of the headers preceding the Fragment
#       header of different fragments of the same original packet may
#       differ.  Whatever headers are present, preceding the Fragment
#       header in each fragment packet, are processed when the packets
#       arrive, prior to queueing the fragments for reassembly.  Only
#       those headers in the Offset zero fragment packet are retained in
#       the reassembled packet.
# 
#       The Next Header values in the Fragment headers of different
#       fragments of the same original packet may differ.  Only the value
#       from the Offset zero fragment packet is used for reassembly.
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
RFC 2460 - IPv6 Specification
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

