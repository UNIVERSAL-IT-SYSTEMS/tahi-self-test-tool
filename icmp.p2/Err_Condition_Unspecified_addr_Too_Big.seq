#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/icmp.p2/Err_Condition_Unspecified_addr_Too_Big.seq,v 1.2 2005/01/06 06:49:43 akisada Exp $

########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: V6LC_5_0_0 $'; }
use V6evalTool;
use icmp;
use Pkt_Too_Big;

# Interface 
$IF = "Link0";
$IF1 = "Link1";

checkNUT(router);

%pktdesc = (
	echo_request_1400_link0	=> 'Send Echo Request w/ 1400 bytes (Link0)',
	pkt_too_big_link0	=> 'Receive Packet Too Big Message (MTU = 1280)',
);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF);
vCapture($IF1);

#----------------------------------------------------------------------
# create neighbor cache entries for link0
#----------------------------------------------------------------------
$ret = mkNCE_Link();
if ($ret != $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000">*** NUT can not be initialized !! ***</FONT><BR>');
	goto error;
}
else {
	vLog("*** TN can make TN's link local address NCE in TN ***");
};

$ret = mkNCE_Global();
if ($ret != $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000">*** NUT can not be initialized !! ***</FONT><BR>');
	goto error;
}
else {
	vLog("*** TN can make TN's global address NCE in TN ***");
};

#----------------------------------------------------------------------
# create neighbor cache entries for link1
#----------------------------------------------------------------------
$ret = mkNCE_Link1();
if ($ret != $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000">*** NUT can not be initialized !! ***</FONT><BR>');
	goto error;
}
else {
	vLog("*** TN can make TN's link local address NCE in TN ***");
};

#----------------------------------------------------------------------
# set route
#----------------------------------------------------------------------
$ret = set_routes();
if ($ret != $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000">*** NUT can not be initialized !! ***</FONT><BR>');
	goto error;
};

#----------------------------------------------------------------------
# Configuration Test -- Forwarding --
#----------------------------------------------------------------------
vLog("Check NUT configuration");
if (check_fwd() != $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000"> NUT\'s configuration was incorrect!! </FONT><BR>');
	goto error;
};


#----------------------------------------------------------------------
# Test 
#----------------------------------------------------------------------

vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");

#----------------------------------------------------------------------
# reduce Link MTU of LINK1 Interface from 1500 to 1280
#----------------------------------------------------------------------
if (set_mtu($IF1, 1280) !=  $icmp::subPass) {
	vLogHTML('<FONT COLOR="#FF0000">set mtu failed.</FONT><BR>');
	goto error;
};

%ret1 = vSend($IF, echo_request_1400_link0);

%ret = icmp_vRecv($IF, $icmp::wait_reply, $ret1{sentTime1}, 0, pkt_too_big_link0);

if ($ret{status} != 0) {
	vLog("TN can not receive Packet Too Big Message.");
}
elsif ($ret{recvFrame} eq 'pkt_too_big_link0') {
	vLogHTML('<FONT COLOR="#FF0000">TN received Packet Too Big Message.</FONT><BR>');
	goto error;
}
else {
	vLogHTML('<FONT COLOR="#FF0000">TN receive unexpected packets from NUT</FONT><BR>');
	goto error;
};

#----------------------------------------------------------------------
# remove configurations
#----------------------------------------------------------------------
vLog("clear configurations");
set_mtu($IF1, 1500);
delete_routes();

vLog("OK");
cleanup();
vStop($IF);
vStop($IF1);
exit($V6evalTool::exitPass);

error:
	vLogHTML('<FONT COLOR="#FF0000">FAIL</FONT><BR>');
	vLog("clear configurations");
	delete_routes();
	set_mtu($IF1, 1500);
	cleanup();
    vStop($IF);
    vStop($IF1);
	exit($V6evalTool::exitFail);

########################################################################
__END__

