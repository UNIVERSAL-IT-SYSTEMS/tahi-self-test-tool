//
// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
// Yokogawa Electric Corporation.
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/icmp.p2/P_Problem_Err_Header_Field.def,v 1.3 2005/03/04 01:40:36 doo Exp $
//

#include "icmp.def"
#include "Fragment.def"

//----------------------------------------------------------------------
// Fragmented Echo Request
//----------------------------------------------------------------------
//
// ICMP echo request (1st fragment)
//
FEM_hdr_ipv6_exth( 
	echo_request_1st, 
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		header = _HDR_IPV6_NAME(echo_request_1st);
		exthdr = frag_hdr_1st;
		upper = payload_1st;
	} 
)

//
// ICMP echo request (2nd fragment)
//
FEM_hdr_ipv6_exth( 
	echo_request_2nd, 
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		header = _HDR_IPV6_NAME(echo_request_2nd);
		exthdr = frag_hdr_2nd;
		upper = payload_2nd;
	} 
)


//----------------------------------------------------------------------
// fragment header and data
//----------------------------------------------------------------------

Hdr_Fragment frag_hdr_1st {
	NextHeader = 58;
	FragmentOffset = 0;
	MFlag = 1;
	Identification = FRAG_ID_T;
}

Hdr_Fragment frag_hdr_2nd {
	NextHeader = 58;
	FragmentOffset = 65; //520/8
	MFlag = 0;
	Identification = FRAG_ID_T;
}


Payload payload_1st {
  //	data = substr(_PACKET_IPV6_NAME(echo_request), 40, 29);
	data = substr(_PACKET_IPV6_NAME(echo_request), 40, 13);
}

Payload payload_2nd {
  //	data = substr(_PACKET_IPV6_NAME(echo_request), 69, 1423);
	data = substr(_PACKET_IPV6_NAME(echo_request), 53, 1423);
}//995


//----------------------------------------------------------------------
// original packet
//----------------------------------------------------------------------

FEM_icmp6_echo_request(
	echo_request,
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		payload = fragment_data;
	}
)

Payload fragment_data {
	data = repeat(1, 21);
	data = repeat(2, 1423);
}
//----------------------------------------------------------------------
// Receive ICMP Error (Parameter Problem, erroneous header field encountered)
//----------------------------------------------------------------------

FEM_icmp6_parameter_problem(
    parameter_problem,
	_HETHER_nut2tn,
	{
		_SRC(NUT_GLOBAL);
		_DST(TN_GLOBAL);
		PayloadLength <= MAX_PAYLOAD;
	},
	{
		Code = 0;	// erroneous header field encounted
		Pointer = 4;	// Pointer to Payload Length
		payload = any;
//		payload = err;
	}
)

Payload err {
	data = right(_PACKET_IPV6_NAME(echo_request_1st), 0);
}
