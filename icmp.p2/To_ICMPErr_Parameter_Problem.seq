#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/icmp.p2/To_ICMPErr_Parameter_Problem.seq,v 1.12 2010/03/29 07:16:26 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: V6LC_5_0_0 $'; }
use V6evalTool;
use icmp;
use lib '../';
use AdvancedFunctionality;

$IF=Link0;

checkNUT(router);

%pktdesc = (
    echo_request	=> 'Send Echo Request',
    echo_reply		=> 'Receive Echo Reply',
	parameter_problem	=> 'Send Parameter Problem Message',
    time_exceeded	=> 'Receive ICMP Error',
);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF);

#must not set default route
$ret = setup();
if ($ret == $icmp::subFail){
	goto error;
}

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");

vSend($IF, parameter_problem);

#%ret = vRecv($IF, $icmp::wait_reply, 0, 0, dst_unreach, ns_global, ns_global_sll);
%ret = icmp_vRecv($IF, $icmp::wait_reply, 0, 0, 'time_exceeded');

if ($ret{status} != 0) {
	vLog("TN do not receive ICMPv6 error message from NUT");
	vLog("OK");
	cleanup();
	vStop($IF);
	exit($V6evalTool::exitPass);
}
elsif ($ret{recvFrame} eq 'time_exceeded') {
	vLogHTML('<FONT COLOR="#FF0000">TN receive ICMPv6 error message from NUT</FONT><BR>');
	goto error;
}
else {
	vLogHTML('<FONT COLOR="#FF0000">TN receive unexpected packets from NUT</FONT><BR>');
	goto error;
}   

error:

vLogHTML('<FONT COLOR="#FF0000">FAIL</FONT><BR>');
cleanup();
vStop($IF);
exit($V6evalTool::exitFail);


########################################################################
__END__

=head1 NAME

	To_ICMPErr_Parameter_Problem.seq - Reception of Flawed Parameter Problem 
        with Hop Limit = 0

=head1 TARGET

	Router

=head1 SYNOPSIS

	To_ICMPErr_Parameter_Problem.seq [-tooloption ...] -p To_ICMPErr_Parameter_Problem.def


=head1 INITIALIZATION

	Common Test Setup 1.1

=head1 TEST PROCEDURE

Verify that a router properly handles the reception and processing of an ICMPv6 Error Message that invokes an error.


	This test verifies that the message processing rule ,
	
    (e) An ICMPv6 error message MUST NOT be sent as a result of
        receiving:

         (e.1) an ICMPv6 error message, or


	TN			NUT

	---------------------------

	1.
	 === ICMPv6  Parameter Problem  ===>
                src address : TN global address
                dst address : Off-link address
                code        : 0           
                hop limit   : 0

	2.
	<< JUDGEMENT >>

	 <=== No packets ===


=head1 JUDGEMENT


    << PASS >>
    The RUT must not send a Time Exceeded Error message with Code 0
    to TN when it receives a Parameter Problem Message 
    that contains a Hop Limit of 0.

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2463
# 2.4 Message Processing Rules
# 
#    Implementations MUST observe the following rules when processing
#    ICMPv6 messages (from [RFC-1122]):
# 
# =begin html
# <pre>
#     <b>(e) An ICMPv6 error message MUST NOT be sent as a result of
#         receiving:<br>
#          (e.1) an ICMPv6 error message</b>, or
# </pre>
# 
# =end html
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
RFC 4443 - ICMPv6 (ICMP for IPv6)
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

	  perldoc V6evalTool

=cut
