#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/nd.p2/v6LC_2_3_13_A.seq,v 1.9 2009/12/28 05:55:17 akisada Exp $
#
########################################################################

use redirect;

BEGIN {}
END   {}

if($V6evalTool::NutDef{'Type'} ne 'host') {
	exitHostOnly($Link0);
	#NOTREACHED
}

vCapture($Link0);

unless(commonSetup_1_1($Link0)) {
	exitInitFail($Link0);
	#NOTREACHED
}

$pktdesc{'local_redirect'} =
	'    Send Redirect w/o TLL, w/o Redirected Header: '.
	'TR1 (link-local) -&gt; HUT (global)';

unless(v6LC_2_3_13_A_B($Link0)) {
	exitFail($Link0);
	#NOTREACHED
}

exitPass($Link0);
#NOTREACHED



#
# perldoc
#
########################################################################
__END__

=head1 NAME

  Test v6LC.2.3.13 - Neighbor Cache Updated from State STALE (Hosts Only)
  Part A: No TLLA Option, No Redirected Packet Option, Link-layer Address Unchanged

=head1 Purpose

  Verify that a host properly updates its Neighbor Cache entry upon receipt of a valid ICMP
  Redirect Message.

=head1 References

  * [ND]  Sections 8.3

=head1 Resource Requirements

  * Packet generator
  * Monitor to capture packets

=head1 Test Setup

  Common Setup 1.1 is performed at the beginning of each test part. Wait at least 3
  seconds (MAX_MULTICAST_SOLICIT * RETRANS_TIMER) after any previous cleanup to make sure
  all previous NCE's are in state No NCE. The Common Test Cleanup Procedure is performed after each
  part. The following table details the Redirect message transmitted in each Part:

=begin html

<BLOCKQUOTE>

<TABLE BORDER>
<TR>
<TD>TLLA Option</TD>
<TD>Redirected Packet Option</TD>
<TD>New NC State</TD>
<TD>Link-layer Address</TD>
<TD>Part</TD>
</TR>
<TR>
<TD>No</TD>
<TD>No</TD>
<TD>STALE</TD>
<TD>Unchanged</TD>
<TD>A</TD>
</TR>
</TABLE>

</BLOCKQUOTE>

=end html

=head1 Procedure

  Part A: No TLLA Option, No Redirected Packet Option, Link-layer Address Unchanged
   1. TR2 transmits a link-local Echo Request to the HUT.
   2. TR2 transmits a solicited Neighbor Advertisement in response to any Neighbor Solicitations from
      the HUT.
   3. Observer the packets transmitted by the HUT.
   4. Wait (REACHCABLE_TIME * MAX_RANDOM_FACTOR). (45 seconds)
   5. TR1 forwards an Echo Request to the HUT. The Source Address is the off-link global address of
      TN1. The Destination Address is the global address of the HUT.
   6. Observe the packets transmitted by the HUT.
   7. TR1 transmits a Redirect message to the HUT. The ICMPv6 Destination Address is the global
      address of TN2. The Target Address is the link-local address of TR2. The Redirect message
      contains a Target Link-layer Address option or Redirected Packet option according to the table
      above.
   8. Wait (RETRANS_TIMER * MAX_*CAST_SOLICIT). (3 seconds)
   9. TR2 transmits a link-local Echo Request to the HUT.
  10. Observe the packets transmitted by the HUT.
  11. Wait 2 seconds.
  12. Wait DELAY_FIRST_PROBE_TIME. (5 seconds)
  13. Observe the packets transmitted by the HUT.

=head1 Observable Results

  Parts A and B
   Step 3:
   The HUT should respond with an Echo Reply.

   Step 6:
   The HUT should respond to the Echo Request using TR1 as a first hop.

   Step 10:
   The HUT should respond with an Echo Reply.

   Step 13:
   The HUT should send a unicast Neighbor Solicitation for TR2, indicating the HUT
   had a NCE for TR2 in state STALE.

=head1 Possible Problems

  * None.

=cut

