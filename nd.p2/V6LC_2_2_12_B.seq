#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/nd.p2/V6LC_2_2_12_B.seq,v 1.10 2009/12/28 05:55:17 akisada Exp $
#
########################################################################

use rdisc;

BEGIN {}
END   {}

vCapture($Link0);

unless(commonSetup_1_1($Link0)) {
	exitInitFail($Link0);
	#NOTREACHED
}

$pktdesc{'local_ra'} =
	'    Send RA w/ SLL (chlim=15): '.
		'TR1 (link-local) -&gt; all-nodes multicast address';

$pktdesc{'local_erep'} =
	'    Recv Echo Reply: NUT (link-local) -&gt; TN1 (link-local)';

$pktdesc{'rs_local'} =
	'    Send RS w/o SLL: '.
	'unspecified address -&gt; all-routers multicast address';

$pktdesc{'ra_local_any'} =
	'    Recv RA: RUT (link-local) -&gt; all-nodes multicast address';

unless(v6LC_2_2_12_B($Link0)) {
        exitFail($Link0);
        #NOTREACHED
}

exitPass($Link0);
#NOTREACHED



#
# perldoc
#
########################################################################
__END__

=head1 NAME

  Test v6LC.2.2.13 - Router Advertisement Processing, Cur Hop Limit
  Part B: Non-Zero

=head1 Purpose

   Verify that a node properly processes the Cur Hop Limit field of a Router Advertisement.

=head1 References

  * [ND]  Sections 4.2, 6.2.1 and 6.3.4

=head1 Resource Requirements

  * Packet generator
  * Monitor to capture packets

=head1 Test Setup

  Common Test Setup 1.1 is performed. The Common Test Cleanup procedure is
  performed after each part.

=head1 Procedure

  Part B: Non-Zero
   6. TN1 transmits an Echo Request to the NUT.
   7. Observe the packets transmitted by the NUT.
   8. If the NUT is a host, TR1 transmits a Router Advertisement with a Cur Hop Limit value of 15. If
      the NUT is a router, configure the Cur Hop Limit to a value of 15 and observe the Router
      Advertisement from the NUT.
   9. TN1 transmits an Echo Request to the NUT.
  10. Observe the packets transmitted by the NUT.

=head1 Observable Results

  Part B
    Step 7:
    The NUT should respond to the Request from TN1. Observe the Hop Limit value in
    the Echo Reply packet the NUT transmits.

    Step 8:
    If the NUT is a router, the NUT should transmit a Router Advertisement with a
    curHopLimit value set to 15.

    Step 10:
    The NUT should respond to the Request from TN1. The Hop Limit value in the
    Echo Reply should be 15.

=head1 Possible Problems

  * None. 

=cut

