//
// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
// Yokogawa Electric Corporation.
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/nd.p2/common_tn_ns.def,v 1.3 2005/02/17 07:06:57 akisada Exp $
//
////////////////////////////////////////////////////////////////

#ifndef HAVE_COMMON_TN_NS_DEF
#define HAVE_COMMON_TN_NS_DEF

FEM_icmp6_ns(
	tn1_mcast_ns_linklocal_offlink,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_global_offlink,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_linklocal_onlink,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINK0_PREFIX, LINK0_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINK0_PREFIX, LINK0_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_linklocal_onlinkX,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_global_onlink,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINK0_PREFIX, LINK0_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINK0_PREFIX, LINK0_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_global_onlinkX,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN)));
	},
	{
		TargetAddress	= tn2v6(LINKX_PREFIX, LINKX_PREFIXLEN);
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_linklocal_common,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(_IPV6_SOLNODE_MCAST(tnv6()));
	},
	{
		TargetAddress	= tnv6();
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_mcast_ns_global_common,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(_IPV6_SOLNODE_MCAST(tnv6()));
	},
	{
		TargetAddress	= tnv6();
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_ucast_ns_linklocal_sll,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		TargetAddress	= tnv6();
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_ucast_ns_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		TargetAddress	= tnv6();
	}
)

FEM_icmp6_ns(
	tn1_ucast_ns_global_sll,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(tnv6());
	},
	{
		TargetAddress	= tnv6();
		option		= _SLLOPT_nut;
	}
)

FEM_icmp6_ns(
	tn1_ucast_ns_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINK0_PREFIX, LINK0_PREFIXLEN));
		_DST(tnv6());
	},
	{
		TargetAddress	= tnv6();
	}
)
#endif	// HAVE_COMMON_TN_NS_DEF
